/*******************************************************************************
** File: ${application_name}_app.c
**
** Purpose:
**   This file contains the source code for the ${application_name} App.
**
*******************************************************************************/

/*
**   Include Files:
*/

\#include "${application_name}_app.h"
\#include "${application_name}_app_msg.h"
\#include "${application_name}_app_events.h"
\#include "${application_name}_version.h"

/** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* ${application_name_caps}_AppMain() -- Application entry point and main process loop          */
/*                                                                            */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  * *  * * * * **/
void ${application_name_caps}_AppMain( void )
{
    int32  status;
    uint32 RunStatus = CFE_ES_APP_RUN;

    CFE_ES_PerfLogEntry(${application_name_caps}_APP_PERF_ID);

    ${application_name_caps}_AppInit();

    /*
    ** ${application_name_caps} Runloop
    */
    while (CFE_ES_RunLoop(&RunStatus) == TRUE)
    {
        CFE_ES_PerfLogExit(${application_name_caps}_APP_PERF_ID);

        /* Pend on receipt of command packet -- timeout set to 500 millisecs */
        status = CFE_SB_RcvMsg(&${application_name_caps}MsgPtr, ${application_name_caps}_CommandPipe, 500);
        
        CFE_ES_PerfLogEntry(${application_name_caps}_APP_PERF_ID);

        if (status == CFE_SUCCESS)
        {
            ${application_name_caps}_ProcessCommandPacket();
        }

    }

    CFE_ES_ExitApp(RunStatus);

} /* End of ${application_name_caps}_AppMain() */
